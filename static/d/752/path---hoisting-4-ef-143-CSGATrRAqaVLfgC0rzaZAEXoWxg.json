{"data":{"site":{"siteMetadata":{"title":"HLipinski devlog","author":"Hubert Lipiński"}},"markdownRemark":{"id":"0de32a70-9d74-5b9e-be3c-9ff635453cf7","excerpt":"Hoisting jest mechanizmem języka JavaScript polegającym na traktowaniu każdej zmiennej zadeklarowanej słowem kluczowym  tak, jakby była zadeklarowana na…","html":"<p><strong>Hoisting</strong> jest mechanizmem języka <em>JavaScript</em> polegającym na traktowaniu każdej zmiennej zadeklarowanej słowem kluczowym <code class=\"language-text\">var</code> tak, jakby była zadeklarowana na początku danego bloku kodu.</p>\n<p>Przykład:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>hoistTest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nhoistTest <span class=\"token operator\">=</span> <span class=\"token string\">\"Hoisting test\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Powyższy kawałek kodu wygeneruje nam błąd <code class=\"language-text\">ReferenceError: hoistTest is not defined</code> co jest spodziewanym zachowaniem: nie zmienna <code class=\"language-text\">hoistTest</code> nie istnieje w momencie jej zalogowania na konsolę.</p>\n<p>Po dodaniu na końcu deklaracji zmiennej:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>hoistTest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nhoistTest <span class=\"token operator\">=</span> <span class=\"token string\">\"Hoisting test\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> hoistTest<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Nie dostaniemy już błędu. Teraz po wywołaniu tych linii kodu na konsolę zostanie wypisany <code class=\"language-text\">undefined</code>, czyli zmienna istnieje, tylko nie została przypisana jej żadna wartość.\nDzieje się tak właśnie za sprawą <strong>hoistingu</strong>. W rzeczywistości, kod który został wykonany w przeglądarce wygląda następująco:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> hoistTest<span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>hoistTest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nhoistTest <span class=\"token operator\">=</span> <span class=\"token string\">\"Hoisting test\"</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Czy silnik języka w momencie kompilacji “przeniósł” deklarację zmiennych słowem kluczowym <code class=\"language-text\">var</code> na początek bloku kodu.</p>","frontmatter":{"title":"Czym jest hoisting?","date":"02-06-2019"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/hoisting/","previous":{"fields":{"slug":"/hello-world/"},"frontmatter":{"title":"Hello World"}},"next":{"fields":{"slug":"/dekorator/"},"frontmatter":{"title":"Wzorzec Dekorator"}}}}